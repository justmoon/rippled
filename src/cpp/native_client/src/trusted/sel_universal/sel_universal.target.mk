# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := sel_universal
DEFS_Debug := \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-fPIC \
	-Wextra \
	-Wno-long-long \
	-Wswitch-enum \
	-Wsign-compare \
	-Wundef \
	-fdiagnostics-show-option \
	-m64 \
	-fno-exceptions \
	-Wall \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-Wstrict-prototypes

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Debug := \
	-Inative_client/src/third_party \
	-I.

DEFS_Release := \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-fPIC \
	-Wextra \
	-Wno-long-long \
	-Wswitch-enum \
	-Wsign-compare \
	-Wundef \
	-fdiagnostics-show-option \
	-m64 \
	-fno-exceptions \
	-Wall \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release := \
	-Wstrict-prototypes

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Release := \
	-Inative_client/src/third_party \
	-I.

OBJS := \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/parsing.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/pnacl_emu_coordinator.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/pnacl_emu_handler.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/pnacl_emu_stream.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/reverse_emulate.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/replay_handler.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/rpc_universal_system.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/rpc_universal.o \
	$(obj).target/$(TARGET)/native_client/src/trusted/sel_universal/sel_universal.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/reverse_service/libreverse_service.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/trusted/nonnacl_util/libnonnacl_util.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/nonnacl_util/libsel_ldr_launcher.a $(obj).target/native_client/src/shared/serialization/libserialization.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-Wl,-z,noexecstack \
	-m64 \
	-rdynamic

LDFLAGS_Release := \
	-pthread \
	-Wl,-z,noexecstack \
	-m64

LIBS := \
	-lrt \
	-lpthread \
	-ldl

$(builddir)/sel_universal: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/sel_universal: LIBS := $(LIBS)
$(builddir)/sel_universal: LD_INPUTS := $(OBJS) $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/reverse_service/libreverse_service.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/trusted/nonnacl_util/libnonnacl_util.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/nonnacl_util/libsel_ldr_launcher.a $(obj).target/native_client/src/shared/serialization/libserialization.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a
$(builddir)/sel_universal: TOOLSET := $(TOOLSET)
$(builddir)/sel_universal: $(OBJS) $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/reverse_service/libreverse_service.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/trusted/nonnacl_util/libnonnacl_util.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/nonnacl_util/libsel_ldr_launcher.a $(obj).target/native_client/src/shared/serialization/libserialization.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/sel_universal
# Add target alias
.PHONY: sel_universal
sel_universal: $(builddir)/sel_universal

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/sel_universal

