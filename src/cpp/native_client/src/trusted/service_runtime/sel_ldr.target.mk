# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := sel_ldr
DEFS_Debug := \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-fPIC \
	-Wextra \
	-Wno-long-long \
	-Wswitch-enum \
	-Wsign-compare \
	-Wundef \
	-fdiagnostics-show-option \
	-m64 \
	-fno-exceptions \
	-Wall \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-Wstrict-prototypes

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Debug := \
	-Inative_client/src/third_party \
	-I.

DEFS_Release := \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-fPIC \
	-Wextra \
	-Wno-long-long \
	-Wswitch-enum \
	-Wsign-compare \
	-Wundef \
	-fdiagnostics-show-option \
	-m64 \
	-fno-exceptions \
	-Wall \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release := \
	-Wstrict-prototypes

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Release := \
	-Inative_client/src/third_party \
	-I.

OBJS := \
	$(obj).target/$(TARGET)/native_client/src/trusted/service_runtime/nacl_test_injection_main.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/native_client/src/trusted/service_runtime/libsel_main.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/trusted/gio/libgio_wrapped_desc.a $(obj).target/native_client/src/trusted/service_runtime/linux/nacl_helper_bootstrap.stamp $(obj).target/native_client/src/trusted/service_runtime/libsel.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/debug_stub/libdebug_stub.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/fault_injection/libnacl_fault_inject.a $(obj).target/native_client/src/trusted/interval_multiset/libnacl_interval.a $(obj).target/native_client/src/trusted/perf_counter/libnacl_perf_counter.a $(obj).target/native_client/src/trusted/platform_qualify/libplatform_qual_lib.a $(obj).target/native_client/src/trusted/cpu_features/libcpu_features.a $(obj).target/native_client/src/trusted/manifest_name_service_proxy/libmanifest_proxy.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/trusted/validator/libvalidators.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86/libservice_runtime_x86_common.a $(obj).target/native_client/src/trusted/validator/x86/64/libncvalidate_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/ncval_reg_sfi/libncval_reg_sfi_x86_64.a $(obj).target/native_client/src/trusted/validator_x86/libnccopy_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/libncval_base_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_decoder_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_opcode_modeling_x86_64.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86_64/libservice_runtime_x86_64.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-Wl,-z,noexecstack \
	-m64 \
	-pie \
	-rdynamic

LDFLAGS_Release := \
	-pthread \
	-Wl,-z,noexecstack \
	-m64 \
	-pie

LIBS := \
	-lrt \
	-lpthread

$(builddir)/sel_ldr: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/sel_ldr: LIBS := $(LIBS)
$(builddir)/sel_ldr: LD_INPUTS := $(OBJS) $(obj).target/native_client/src/trusted/service_runtime/libsel_main.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/trusted/gio/libgio_wrapped_desc.a $(obj).target/native_client/src/trusted/service_runtime/libsel.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/debug_stub/libdebug_stub.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/fault_injection/libnacl_fault_inject.a $(obj).target/native_client/src/trusted/interval_multiset/libnacl_interval.a $(obj).target/native_client/src/trusted/perf_counter/libnacl_perf_counter.a $(obj).target/native_client/src/trusted/platform_qualify/libplatform_qual_lib.a $(obj).target/native_client/src/trusted/cpu_features/libcpu_features.a $(obj).target/native_client/src/trusted/manifest_name_service_proxy/libmanifest_proxy.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/trusted/validator/libvalidators.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86/libservice_runtime_x86_common.a $(obj).target/native_client/src/trusted/validator/x86/64/libncvalidate_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/ncval_reg_sfi/libncval_reg_sfi_x86_64.a $(obj).target/native_client/src/trusted/validator_x86/libnccopy_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/libncval_base_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_decoder_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_opcode_modeling_x86_64.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86_64/libservice_runtime_x86_64.a
$(builddir)/sel_ldr: TOOLSET := $(TOOLSET)
$(builddir)/sel_ldr: $(OBJS) $(obj).target/native_client/src/trusted/service_runtime/libsel_main.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/trusted/gio/libgio_wrapped_desc.a $(obj).target/native_client/src/trusted/service_runtime/libsel.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/debug_stub/libdebug_stub.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/fault_injection/libnacl_fault_inject.a $(obj).target/native_client/src/trusted/interval_multiset/libnacl_interval.a $(obj).target/native_client/src/trusted/perf_counter/libnacl_perf_counter.a $(obj).target/native_client/src/trusted/platform_qualify/libplatform_qual_lib.a $(obj).target/native_client/src/trusted/cpu_features/libcpu_features.a $(obj).target/native_client/src/trusted/manifest_name_service_proxy/libmanifest_proxy.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/trusted/validator/libvalidators.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86/libservice_runtime_x86_common.a $(obj).target/native_client/src/trusted/validator/x86/64/libncvalidate_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/ncval_reg_sfi/libncval_reg_sfi_x86_64.a $(obj).target/native_client/src/trusted/validator_x86/libnccopy_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/libncval_base_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_decoder_x86_64.a $(obj).target/native_client/src/trusted/validator/x86/decoder/libnc_opcode_modeling_x86_64.a $(obj).target/native_client/src/trusted/service_runtime/arch/x86_64/libservice_runtime_x86_64.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/sel_ldr
# Add target alias
.PHONY: sel_ldr
sel_ldr: $(builddir)/sel_ldr

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/sel_ldr

